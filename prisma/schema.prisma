// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid()) // Unique identifier
  username   String   @unique // Username must be unique
  password   String   
  avatarUrl  String
  banned     Boolean?   @default(false)
  posts      Post[]   @relation("userPosts")
  likedPosts Post[]   @relation("likedPosts")
  createdAt  DateTime @default(now()) // Timestamp for account creation
  updatedAt  DateTime @updatedAt // first time will be same as createdAt
}

model Post {
  id          String   @id @default(cuid())
  content     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  likes       Int
  impressions Int
  userId      String // Foreign key to the User model
  user        User     @relation("userPosts",fields: [userId], references: [id],onDelete: Cascade) // Relation to User and if user gets deleted all his posts gets deleted as well
  likedBy     User[]   @relation("likedPosts")
}
